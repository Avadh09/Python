Implement regular expression matching with support for '.' and '*'.

'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true

Solution :

class Solution(object):
    global check;
    def check(s,p,length):
        for i in range(length):
                if(s[i]!=p[i]):
                    if(s[i]=="." or p[i]=="."):
                        continue;
                    elif (s[i]=="*" or p[i]=="*"):
                        return True;
                    else:
                        return False;
                else:
                    continue;
        return True;
        
    def isMatch(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: bool
        """
        if s=="" or p=="":
            if len(s)==len(p):
                return True;
            else:
                return False;
        if(s[0]=="*" or p[0]=="*"):
                 return True;
            
        if len(s)<len(p):
            if "*" in s:
                for i in range(len(s)):
                    if(s[i]==p[i]):
                        continue;
                    elif(s[i]=="*" or p[i]=="*"):
                        return True;
                    elif(s[i]=="." or p[i]=="."):
                        continue;
                    else:
                        return False;
            if "*" in p:
                for
            else:
                return False;
                    
            
    
        elif len(s)>len(p):
            if "*" in p:
                for i in range(len(p)):
                    if(s[i]==p[i]):
                        continue;
                    elif(s[i]=="*" or p[i]=="*"):
                        return True;
                    elif(s[i]=="." or p[i]=="."):
                        continue;
                    else:
                        return False;
            else:
                return False;
            
        else:
            value=check(s,p,len(s));
             
        return value;
        
            
                
        