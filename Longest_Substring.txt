 Longest Substring Without Repeating Characters
 
 Given a string, find the length of the longest substring without repeating characters.

Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

Solution :

class Solution(object):
    def lengthOfLongestSubstring(self, s):
        dic, maximum, start, = {}, 0, 0
        if len(s)==0:
            return 0;
        if len(s)==1:
            return 1;
        for i in range(len(s)):
            if s[i] in dic and start<=dic[s[i]]:
                start=dic[s[i]]+1;
               
            else:
                 maximum=max(maximum,i-start+1);
            dic[s[i]]=i
                
           
            #print maximum
        return maximum
		
		
Runtime :85 ms

O(n) complexity